---------------------------------------------------------------------------------------------
-- TOP 4 WINNING TEAMS
---------------------------------------------------------------------------------------------
SELECT WINNER, COUNT(WINNER) FROM MATCHES WHERE SEASON = '2015' 
GROUP BY WINNER HAVING COUNT (WINNER) IN (SELECT DISTINCT COUNT(WINNER) WINNER_WIN_COUNT 
FROM MATCHES WHERE SEASON = '2015' AND WINNER IS NOT NULL GROUP BY WINNER ORDER BY COUNT(WINNER) 
DESC LIMIT 4) ORDER BY COUNT(WINNER) DESC;

-- DEBUG QUERY
SELECT WINNER, COUNT(WINNER) FROM MATCHES M WHERE SEASON = '2017' GROUP BY WINNER ORDER BY COUNT(WINNER) DESC LIMIT 4;
SELECT WINNER, SEASON, COUNT(WINNER) FROM MATCHES WHERE SEASON = '2015' GROUP BY  WINNER, SEASON;
SELECT DISTINCT SEASON FROM MATCHES;
---------------------------------------------------------------------------------------------
-- TEAM WINNING THE MOST NUMBER OF TOSSES
---------------------------------------------------------------------------------------------
SELECT TOSS_WINNER, COUNT(TOSS_WINNER) FROM MATCHES WHERE SEASON = '2015' 
GROUP BY TOSS_WINNER HAVING COUNT (TOSS_WINNER) = (SELECT MAX(TOSS_WIN_COUNT) 
FROM (SELECT TOSS_WINNER, COUNT(TOSS_WINNER) TOSS_WIN_COUNT 
FROM MATCHES WHERE SEASON = '2015' GROUP BY TOSS_WINNER) AS RESULTS);

---------------------------------------------------------------------------------------------
-- SCRIPT TO FETCH PLAYER OF THE MATCH
---------------------------------------------------------------------------------------------
SELECT PLAYER_OF_MATCH, COUNT(PLAYER_OF_MATCH) FROM MATCHES WHERE SEASON = '2017' 
GROUP BY PLAYER_OF_MATCH HAVING COUNT (PLAYER_OF_MATCH) = (SELECT MAX(PLAYER_WIN_COUNT) 
FROM (SELECT PLAYER_OF_MATCH, COUNT(PLAYER_OF_MATCH) PLAYER_WIN_COUNT 
FROM MATCHES WHERE SEASON = '2017' GROUP BY PLAYER_OF_MATCH) AS RESULTS);

---------------------------------------------------------------------------------------------
-- TEAM WINNING THE MOST MATCHES
---------------------------------------------------------------------------------------------
SELECT WINNER, COUNT(WINNER) FROM MATCHES WHERE SEASON = '2015' 
GROUP BY WINNER HAVING COUNT (WINNER) = (SELECT MAX(MATCH_WIN_COUNT) 
FROM (SELECT WINNER, COUNT(WINNER) MATCH_WIN_COUNT 
FROM MATCHES WHERE SEASON = '2015' GROUP BY WINNER) AS RESULTS);

-- DEBUG QUERY
SELECT MAX(WINNER) FROM MATCHES;
SELECT WINNER, COUNT(WINNER) FROM MATCHES WHERE SEASON = '2017' GROUP BY WINNER ORDER BY COUNT(WINNER) DESC;

---------------------------------------------------------------------------------------------
-- LOCATION WITH THE MOST NUMBER OF WINS FOR THE TOP TEAM
---------------------------------------------------------------------------------------------
SELECT VENUE,WINNER,COUNT(WINNER) FROM MATCHES WHERE SEASON = '2015' AND WINNER IN
(SELECT WINNER FROM MATCHES WHERE SEASON = '2015' 
GROUP BY WINNER HAVING COUNT (WINNER) = (SELECT MAX(MATCH_WIN_COUNT) 
FROM (SELECT WINNER, COUNT(WINNER) MATCH_WIN_COUNT 
FROM MATCHES WHERE SEASON = '2015' GROUP BY WINNER) AS RESULTS)) 
GROUP BY VENUE,WINNER ORDER BY COUNT(WINNER) DESC
LIMIT (SELECT COUNT(*) FROM (SELECT WINNER FROM MATCHES WHERE SEASON = '2015' 
GROUP BY WINNER HAVING COUNT (WINNER) = (SELECT MAX(MATCH_WIN_COUNT) 
FROM (SELECT WINNER, COUNT(WINNER) MATCH_WIN_COUNT 
FROM MATCHES WHERE SEASON = '2015' GROUP BY WINNER) AS RESULTS)) AS FINALDATA);

-- DEBUG QUERY
SELECT WINNER,MAX(MAX_WINNER.MAX_WINNER_COUNT) FROM 
(SELECT VENUE AS MAX_LOCATION, WINNER,COUNT(WINNER) AS MAX_WINNER_COUNT FROM MATCHES WHERE SEASON = '2015' AND WINNER IN
(SELECT WINNER FROM MATCHES WHERE SEASON = '2015' 
GROUP BY WINNER HAVING COUNT (WINNER) = (SELECT MAX(MATCH_WIN_COUNT) 
FROM (SELECT WINNER, COUNT(WINNER) MATCH_WIN_COUNT 
FROM MATCHES WHERE SEASON = '2015' GROUP BY WINNER) AS RESULTS)) 
GROUP BY VENUE,WINNER ORDER BY COUNT(WINNER) DESC) AS MAX_WINNER GROUP BY WINNER;

SELECT WINNER, COUNT(WINNER) FROM MATCHES WHERE WINNER = 'MUMBAI INDIANS' AND SEASON = '2015' GROUP BY WINNER;
SELECT VENUE,WINNER FROM MATCHES WHERE VENUE  = 'EDEN GARDENS' AND WINNER = 'MUMBAI INDIANS' AND SEASON = '2015';


---------------------------------------------------------------------------------------------
-- PERCENTAGE OF TEAMS DECIDING TO BAT WHEN THEY WON THE TOSS
---------------------------------------------------------------------------------------------  
SELECT CONCAT(ROUND((
((CAST((SELECT COUNT(*) FROM MATCHES WHERE TOSS_DECISION = 'bat' AND SEASON = '2017') AS DECIMAL(7,2))) /
(CAST((SELECT COUNT(*) FROM MATCHES WHERE SEASON = '2017') AS DECIMAL(7,2)))) * 100),2),'%') AS PERCENTAGE;

---------------------------------------------------------------------------------------------
-- LOCATION HOSTING THE MOST NUMBER OF MATCHES
---------------------------------------------------------------------------------------------  
SELECT VENUE, COUNT(VENUE) FROM MATCHES WHERE SEASON = '2015' 
GROUP BY VENUE HAVING COUNT (VENUE) IN (SELECT DISTINCT COUNT(VENUE) VENUE_WIN_COUNT 
FROM MATCHES WHERE SEASON = '2015' AND VENUE IS NOT NULL GROUP BY VENUE ORDER BY COUNT(VENUE) 
DESC LIMIT 1) ORDER BY COUNT(VENUE) DESC;

-- DEBUG QUERY
SELECT COUNT(*) FROM  MATCHES WHERE SEASON  = '2015' AND VENUE = 'Wankhede Stadium' GROUP BY VENUE;

---------------------------------------------------------------------------------------------
-- TEAM WINNING BY THE HIGHEST MARGIN OF RUNS
--------------------------------------------------------------------------------------------- 
SELECT WINNER FROM MATCHES WHERE SEASON = '2016' AND WIN_BY_RUNS IN 
(SELECT MAX(WIN_BY_RUNS) FROM MATCHES WHERE SEASON = '2016') GROUP BY WINNER;

-- DEBUG QUERY
SELECT WINNER,WIN_BY_RUNS FROM MATCHES M  WHERE SEASON = '2016' ORDER BY WIN_BY_RUNS DESC;

---------------------------------------------------------------------------------------------
-- TEAM WINNING BY THE HIGHEST NUMBER OF WICKETS
--------------------------------------------------------------------------------------------- 
SELECT WINNER FROM MATCHES WHERE SEASON = '2016' AND WIN_BY_WICKETS IN 
(SELECT MAX(WIN_BY_WICKETS) FROM MATCHES WHERE SEASON = '2016') GROUP BY WINNER;

-- DEBUG QUERY
SELECT WINNER,WIN_BY_WICKETS FROM MATCHES M  WHERE SEASON = '2016' ORDER BY WIN_BY_WICKETS DESC;

---------------------------------------------------------------------------------------------
-- NUMBER OF TIMES A TEAM WON THE TOSS AND THE MATCH
--------------------------------------------------------------------------------------------- 
SELECT COUNT(*) FROM MATCHES WHERE TOSS_WINNER = WINNER AND SEASON = '2016';

---------------------------------------------------------------------------------------------
-- PLAYER SCORING THE MOST RUNS IN A MATCH (CRICKET)
--------------------------------------------------------------------------------------------- 
SELECT BATSMAN, COUNT(BATSMAN_RUNS) FROM DELIVERIES D1
INNER JOIN MATCHES M1 ON D1.MATCH_ID = M1.ID
WHERE DISMISSAL_KIND = 'caught' AND M1.SEASON = '2017'
GROUP BY BATSMAN HAVING COUNT (BATSMAN_RUNS) IN (SELECT DISTINCT COUNT(BATSMAN_RUNS) RUN_COUNT 
FROM DELIVERIES D2 INNER JOIN MATCHES M2 ON D2.MATCH_ID = M2.ID 
WHERE DISMISSAL_KIND = 'caught' AND M2.SEASON = '2017' AND BATSMAN IS NOT NULL 
GROUP BY BATSMAN ORDER BY COUNT(BATSMAN_RUNS) DESC LIMIT 1) 

-- DEBUG QUERY
SELECT BATSMAN,BATSMAN_RUNS FROM DELIVERIES ORDER BY BATSMAN_RUNS DESC;
SELECT MAX(ID) FROM MATCHES
SELECT MAX(MATCH_ID) FROM DELIVERIES 

SELECT M1.ID, BATSMAN,BATSMAN_RUNS FROM DELIVERIES D1 
INNER JOIN MATCHES M1 ON D1.MATCH_ID = M1.ID
WHERE M1.SEASON = '2017'
ORDER BY M1.ID,BATSMAN_RUNS DESC;

---------------------------------------------------------------------------------------------
-- HIGHEST NUMBER OF CATCHES BY AN INDIVIDUAL PLAYER
--------------------------------------------------------------------------------------------- 
SELECT FIELDER, COUNT(FIELDER) FROM DELIVERIES D1
INNER JOIN MATCHES M1 ON D1.MATCH_ID = M1.ID
WHERE DISMISSAL_KIND = 'caught' AND M1.SEASON = '2017'
GROUP BY FIELDER HAVING COUNT (FIELDER) IN (SELECT DISTINCT COUNT(FIELDER) CATCHES_COUNT 
FROM DELIVERIES D2 INNER JOIN MATCHES M2 ON D2.MATCH_ID = M2.ID 
WHERE DISMISSAL_KIND = 'caught' AND M2.SEASON = '2017' AND FIELDER IS NOT NULL 
GROUP BY FIELDER ORDER BY COUNT(FIELDER) DESC LIMIT 1) 

-- DEBUG QUERY
SELECT FIELDER,COUNT(FIELDER) FROM DELIVERIES WHERE DISMISSAL_KIND = 'caught' GROUP BY FIELDER ORDER BY COUNT(FIELDER) DESC;

SELECT FIELDER, COUNT(FIELDER) FROM DELIVERIES WHERE DISMISSAL_KIND = 'caught' 
GROUP BY FIELDER HAVING COUNT (FIELDER) IN (SELECT DISTINCT COUNT(FIELDER) CATCHES_COUNT 
FROM DELIVERIES WHERE DISMISSAL_KIND = 'caught' AND FIELDER IS NOT NULL GROUP BY FIELDER ORDER BY COUNT(FIELDER) 
DESC LIMIT 1) ORDER BY COUNT(FIELDER) DESC;